version: '3.8'

services:
  # PHP-FPM Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./src:/var/www/html
    networks:
      - laravel_network

  # Nginx Service
  webserver:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./src:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - laravel_network
    depends_on:
      - app
      - db
      - phpmyadmin
      # - mailhog

  # MySQL Service
  db:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_PASSWORD: secret
      MYSQL_USER: laravel
    ports:
      - "3316:3306"
    volumes:
      - laravel_db_data:/var/lib/mysql
    networks:
      - laravel_network

  # Composer Service
  composer:
    image: composer:latest
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    networks:
      - laravel_network
    entrypoint: ['composer']
  # PhpMyAdmin Service
  phpmyadmin:
    image: phpmyadmin:latest
    restart: unless-stopped
    environment:
      PMA_HOST: db
      PMA_USER: root
      PMA_PASSWORD: secret
    ports:
      - "8081:80"
    networks:
      - laravel_network
    depends_on:
      - db
    
  # MailHog Service(For testing emails)
  # mailhog:
  #   image: mailhog/mailhog:latest
  #   restart: unless-stopped
  #   ports:
  #     - "8025:8025"
  #     - "1025:1025"
  #   networks:
  #     - laravel_network

# Docker Networks
networks:
  laravel_network:
    driver: bridge

# Docker Volumes
volumes:
  laravel_db_data:
    driver: local